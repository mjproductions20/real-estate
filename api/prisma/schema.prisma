generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  email     String   @unique
  username  String   @unique
  password  String
  avatar    String?
  createdAt DateTime @default(now())
  chatIds   String[] @db.ObjectId

  posts      Post[]
  savedPosts SavedPost[]
  chats      Chat[]      @relation(fields: [chatIds], references: [id])
}

model Post {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  title     String
  price     Int
  images    String[]
  address   String
  city      String
  bedroom   Int
  bathroom  Int
  latitude  String
  longitude String
  type      Type
  property  Property
  createdAt DateTime @default(now())

  userId     String      @db.ObjectId
  user       User        @relation(fields: [userId], references: [id])
  PostDetail PostDetail?
  savedPosts SavedPost[]
}

enum Type {
  buy
  rent
}

enum Property {
  apartment
  house
  condo
  land
}

model PostDetail {
  id         String  @id @default(auto()) @map("_id") @db.ObjectId
  desc       String
  utilities  String?
  petPolicy  String?
  income     String?
  size       Int?
  school     Int?
  bus        Int?
  restaurant Int?

  postId String @unique @db.ObjectId
  post   Post   @relation(fields: [postId], references: [id])
}

model SavedPost {
  id     String @id @default(auto()) @map("_id") @db.ObjectId
  userId String @db.ObjectId
  postId String @db.ObjectId
  user   User   @relation(fields: [userId], references: [id])
  post   Post   @relation(fields: [postId], references: [id])

  @@unique([userId, postId])
}

model Chat {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  userIds     String[]  @db.ObjectId
  users       User[]    @relation(fields: [userIds], references: [id])
  createdAt   DateTime  @default(now())
  seenBy      String[]  @db.ObjectId
  messages    Message[]
  lastMessage String?
}

model Message {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  text      String
  userId    String   @db.ObjectId
  chatId    String   @db.ObjectId
  chat      Chat     @relation(fields: [chatId], references: [id])
}
